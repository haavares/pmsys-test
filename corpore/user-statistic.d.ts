import { IDataPoint } from '../omh';
import { IWellness } from './wellness';
import { ISessionRPE } from './session-rpe';
import { IParticipation } from './participation';
export declare function dateCmp(a: Date, b: Date): number;
export declare class UserStatistics {
    private currentScoreValidityDays;
    srpeXData: Date[];
    srpeYData: number[];
    exertion: number[];
    mood: number[];
    moodX: Date[];
    readiness: number[];
    readinessX: Date[];
    stress: number[];
    stressX: Date[];
    soreness: number[];
    sorenessX: Date[];
    fatigue: number[];
    fatigueX: Date[];
    sleepDuration: number[];
    sleepQuality: number[];
    sleepX: Date[];
    generalReadiness: number;
    localReadiness: number;
    injuryReadiness: number;
    currentFatigueScore: number;
    currentMoodScore: number;
    currentSleepQualityScore: number;
    currentSleepAmountScore: number;
    currentSorenessScore: number;
    currentStressScore: number;
    currentInjuryScore: number;
    currentLoadScore: number;
    currentStrainScore: number;
    currentTrendScore: number;
    participateX: Date[];
    participateGoing: string[];
    participateComment: string[];
    latestReport: {
        [key: string]: Date;
    };
    earliestReport: {
        [key: string]: Date;
    };
    srpeData: IDataPoint<ISessionRPE>[];
    wellnessData: IDataPoint<IWellness>[];
    participationData: IDataPoint<IParticipation>[];
    private _dirty;
    getLatest(name: string): Date;
    addDataPoint(value: IDataPoint<any>): void;
    addDataPoints(value: IDataPoint<any>[]): void;
    recompute(): void;
    setCurrentScoreDays(days: number): void;
    private computeScores(offset?);
    private computeWellnessData();
    private computeParticipationData();
    private computeSessionRPEData();
}
